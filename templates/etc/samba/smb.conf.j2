# Global parameters
#
# {{ ansible_managed }}
#
{% if samba_create_domain_controller is defined and samba_create_domain_controller and samba_server_role == "active directory domain controller" %}
# AD DC Server
[global]
        workgroup = {{ samba_ad_info.netbios_domain_name|upper }}
        realm = {{ samba_ad_info.kerberos_realm|upper }}
        netbios name = {{ ansible_hostname|upper|truncate(15, True, '') }}
        server role = {{ samba_server_role }}
        dns forwarder = {{ samba_ad_info.dns_forwarder }}

      #  dedicated keytab file = /etc/krb5.keytab
      #  kerberos method = secrets and keytab
      #  username map = /etc/samba/user.map

        interfaces = {{ samba_interfaces }}
        bind interfaces only = {{ samba_bind_interfaces_only }}

[netlogon]
        path = /var/lib/samba/sysvol/{{ samba_ad_info.kerberos_realm|lower }}/scripts
        read only = No

[sysvol]
        path = /var/lib/samba/sysvol
        read only = No
{% elif (samba_create_domain_controller is defined and not samba_create_domain_controller) or samba_create_domain_controller is not defined and samba_server_role == "member server" %}
# Member Server
[global]
        workgroup = {{ samba_ad_info.netbios_domain_name|upper }}
        realm = {{ samba_ad_info.kerberos_realm|upper }}
        netbios name = {{ ansible_hostname|upper|truncate(15, True, '') }}
        server role = {{ samba_server_role }}
        security = {{ samba_security }}

      #  dedicated keytab file = /etc/krb5.keytab
      #  kerberos method = secrets and keytab
      #  username map = /etc/samba/user.map

        interfaces = {{ samba_interfaces }}
        bind interfaces only = {{ samba_bind_interfaces_only }}

        encrypt passwords = true
        template shell = /bin/bash
        template homedir = /home/{{ samba_ad_info.ad_dns_domain_name }}/%U
        log file = /var/log/samba/log.%m
        max log size = 1000
        syslog = 0
        panic action = /usr/share/samba/panic-action %d
        winbind use default domain = yes
        winbind enum users = yes
        winbind enum groups = yes
        winbind expand groups = 1
        winbind nss info = template
        winbind cache time = 3600
        winbind offline logon = no
        winbind max domain connections = 5
        winbind refresh tickets = yes
        idmap config * : backend = tdb
        idmap config * : range = 3000-7999
        idmap config {{ samba_ad_info.netbios_domain_name|upper }} : backend = rid
        idmap config {{ samba_ad_info.netbios_domain_name|upper }} : range = 10000001-20000000

{% elif (samba_create_domain_controller is defined and not samba_create_domain_controller) or samba_create_domain_controller is not defined and samba_server_role == "standalone" %}
# Stand Alone Server
[global]

   workgroup = {{ samba_workgroup|upper }}
   server string = %h server (Samba, Ubuntu)
   dns proxy = no
   netbios name = {{ ansible_hostname|upper }}
   security = {{ samba_security }}
   server role = {{ samba_server_role }}

  # dedicated keytab file = /etc/krb5.keytab
  # kerberos method = secrets and keytab
  # username map = /etc/samba/user.map

   interfaces = {{ samba_interfaces }}
   bind interfaces only = {{ samba_bind_interfaces_only }}

   log file = /var/log/samba/log.%m
   max log size = 1000
   syslog = 0
   panic action = /usr/share/samba/panic-action %d
   passdb backend = tdbsam
   obey pam restrictions = yes
   unix password sync = yes
   passwd program = /usr/bin/passwd %u
   passwd chat = *Enter\snew\s*\spassword:* %n\n *Retype\snew\s*\spassword:* %n\n *password\supdated\ssuccessfully* .
   pam password change = yes
   map to guest = bad user

{% endif %}
{% if samba_shares is defined %}
#======================= Share Definitions =======================

{%   for item in samba_shares %}
[{{ item.name }}]
browsable = {{ item.browsable|lower }}
guest ok = {{ item.guest_ok|lower }}
path = {{ samba_share_path }}/{{ item.name }}
{%     if item.read_only is defined %}
read only = {{ item.read_only|lower }}
{%     endif %}
{%     if item.valid_users is defined %}
valid users = {{ item.valid_users }}
{%     endif %}
writable = {{ item.writable|lower }}

{%   endfor %}
{% endif %}
